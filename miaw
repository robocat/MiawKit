#!/usr/bin/ruby

require 'set'

def generate_keys_file()
  strings = {}
  lang_count = 0
  all_langs = []

  strings.each do |key, value|
    if (value.count > lang_count) then
      lang_count = value.count
      all_langs = value.keys
    end
  end

  default_language = "en"

  Dir.glob("**/*.lproj/*.strings").each do |filename|
    if filename.start_with?("Pods")
      next
    end

    puts "Processing: #{filename}"

    lang = filename[/[^\.]*/]
  
    File.open(filename, "r:UTF-8") do |f|
      contents = f.read
      contents.scan(/\"([^\"]*)\"\s=\s\"([^\"]*)\";/) do |key, value|
        strings[key] ||= {}
        strings[key][lang] = value
      end
    end
  end

  f = File.open("MKLocalizationKeys.h", "w")
  f.write("// Header automatically generated by MiawKit. Do not edit.\n")
  f.write("// Generated on #{ Date.new }\n")
  f.write("\n")
  f.write("#import <Foundation/Foundation.h>\n");
  f.write("\n")
  f.write("#ifndef MK_LOCALIZATION_KEYS\n")
  f.write("#define MK_LOCALIZATION_KEYS\n")
  f.write("\n")

  strings.each do |key, value|
    if (value.count != lang_count) then
      missing_langs = all_langs.inject([]) { |a, v| if not value.keys.include? v then a << v else a end }
      f.write("#warning Missing languages #{ missing_langs.join(', ') } for key '#{key}'\n");
    end

    f.write("/*!\n")
  
    value.each do |lang, desc|
      if (lang == default_language) then
        f.write(" * \"#{ desc }\"\n\n")
      end
    end
  
    f.write(" * All translations:\n\n")
  
    value.each do |lang, desc|
      f.write(" * @b #{ lang }@: \"#{ desc }\"\n\n")
    end
  
    f.write(" */\n")
    f.write("static NSString * const #{key.gsub("%", "").gsub("@", "X")} = @\"#{ key }\";\n\n")
  end

  f.write("                                               \n")
  f.write("#endif                                         \n")

  f.close()
end

if (ARGV.count == 0) then
  puts("Usage: #{ $PROGRAM_NAME } command")
  puts("Commands:")
  puts("\tgenerate [default_lang]")
  puts("\t\tGenerates a header with all localization keys.")
  puts("\t\tSet default_lang to the code of your development language, default is en.")
end

if (ARGV[0] == "generate") then
  generate_keys_file()
end
